// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaccarAPI.Data;

namespace PaccarAPI.Migrations
{
    [DbContext(typeof(PaccarDbContext))]
    [Migration("20190303011707_1tomanyIcollection")]
    partial class _1tomanyIcollection
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PaccarAPI.Models.BestPractice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Date");

                    b.Property<string>("Department");

                    b.Property<string>("PN");

                    b.Property<string>("Practice");

                    b.Property<string>("Summary");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("BestPractice");
                });

            modelBuilder.Entity("PaccarAPI.Models.BestPracticeCompany", b =>
                {
                    b.Property<int>("BestPracticeId");

                    b.Property<int>("CompanyId");

                    b.HasKey("BestPracticeId", "CompanyId");

                    b.HasIndex("CompanyId");

                    b.ToTable("BestPracticeCompany");
                });

            modelBuilder.Entity("PaccarAPI.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Company");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "PACCAR"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Kenworth"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Peterbilt"
                        },
                        new
                        {
                            Id = 4,
                            Name = "DAF"
                        });
                });

            modelBuilder.Entity("PaccarAPI.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("PaccarAPI.Models.BestPracticeCompany", b =>
                {
                    b.HasOne("PaccarAPI.Models.BestPractice")
                        .WithMany("BestPracticeCompanies")
                        .HasForeignKey("BestPracticeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PaccarAPI.Models.Company")
                        .WithMany("CompanyBestPractices")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
